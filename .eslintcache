[{"/home/user/Documents/BCH/cashswap/src/index.js":"1","/home/user/Documents/BCH/cashswap/src/App.js":"2","/home/user/Documents/BCH/cashswap/src/reportWebVitals.js":"3","/home/user/Documents/BCH/cashswap/src/components/MainSwap.js":"4","/home/user/Documents/BCH/cashswap/src/service/contract.js":"5","/home/user/Documents/BCH/cashswap/src/service/helper.js":"6","/home/user/Documents/BCH/cashswap/src/service/ecdsa.js":"7","/home/user/Documents/BCH/cashswap/src/service/secp256k1.js":"8"},{"size":547,"mtime":1610629395897,"results":"9","hashOfConfig":"10"},{"size":5263,"mtime":1611003328369,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1610626132084,"results":"12","hashOfConfig":"10"},{"size":6295,"mtime":1610994735994,"results":"13","hashOfConfig":"10"},{"size":6002,"mtime":1610893300355,"results":"14","hashOfConfig":"10"},{"size":1262,"mtime":1610893300355,"results":"15","hashOfConfig":"10"},{"size":4068,"mtime":1610893300355,"results":"16","hashOfConfig":"10"},{"size":2230,"mtime":1610893300355,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1mq3njw",{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/user/Documents/BCH/cashswap/src/index.js",[],["36","37"],"/home/user/Documents/BCH/cashswap/src/App.js",["38","39","40"],"/home/user/Documents/BCH/cashswap/src/reportWebVitals.js",[],"/home/user/Documents/BCH/cashswap/src/components/MainSwap.js",["41","42","43","44","45","46","47","48","49"],"import React, { useState } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport { InputGroup, InputGroupAddon, Button, Input } from 'reactstrap';\nimport { Media, Form, FormGroup, Label, InputGroupText } from 'reactstrap';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Spinner } from 'reactstrap';\nimport './MainSwap.css';\nimport { ArrowDown } from 'react-feather'\nimport {swap} from '../service/contract.js'\n\nconst BCHSLPprice = 400000\nconst BCHUSDprice = 530\n\nfunction PresentResultOfSwap(props){\n    if (props.swapStatus === 'ready'){ return (<p>PresentResultOfSwap</p>)}\n    if (props.swapStatus === 'working'){ return (<Spinner size=\"sm\" color=\"secondary\" />)}\n    return (<></>)\n  }\n\nclass SwapForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { slp: 0.0, bch: 0.0, slpusd: 0.0, bchusd: 0.0, privateKey: '',\n        isModalOpen: false, setModal: false,\n        swapStatus: 'ready'};\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.toggleModal = this.toggleModal.bind(this);\n    this.handleChangePrivateKey = this.handleChangePrivateKey.bind(this);\n    this.handleSubmitPrivateKey = this.handleSubmitPrivateKey.bind(this);\n  }\n\n  handleInputChange(event) {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = target.name;\n      this.setState({\n        [name]: value    });\n    }\n\n  handleChange(e) {\n    this.setState({ bch: e.target.value, slp: e.target.value / BCHSLPprice, bchusd: e.target.value * BCHUSDprice, slpusd: e.target.value * BCHUSDprice / BCHSLPprice });\n  }\n\n  toggleModal() {\n    this.setState({\n      isModalOpen: !this.state.isModalOpen\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.slp === 0 ) {\n        this.setState((state)=>{return {swapStatus : \"SLP can't be 0\"}});\n      return;\n    }\n    if (this.state.privateKey === '' ) {\n        this.setState((state)=>{return {swapStatus : 'no private key'}});\n        this.toggleModal();\n      return;\n    }\n\n    this.setState((state)=>{return {swapStatus : 'working'}});\n    if ( swap(this.state.slp, this.state.bch) === false ){\n        this.setState((state)=>{return {swapStatus : 'swap failed'}});\n    }\n    if ( swap(this.state.slp, this.state.bch) === true ){\n        this.setState((state)=>{return {swapStatus : 'swap succeeded'}});\n    }\n\n  }\n\n  handleChangePrivateKey(e) {\n    this.setState({\n      privateKey: e.target.value\n    });\n\n  }\n\n  handleSubmitPrivateKey(e) {\n    e.preventDefault();\n    this.handleSubmit(e) ;\n  }\n\n  render() {\n      return (\n              <div id=\"mainDiv\">\n\n              <Row><Col><h4 className=\"SwapFormTitle\">Swap</h4></Col><Col xs=\"auto\"></Col></Row>\n              <Form>\n                <FormGroup row className=\"formGroupFrom\">\n                    <Row><Col>You are exchanging:</Col></Row>\n                        <Row><Col>\n                            <InputGroup>\n                                <Input type=\"number\" name=\"BCHamount\" id=\"BCHamount\" onChange={this.handleChange} value={this.state.bch} bsSize=\"lg\" />\n                                <InputGroupAddon addonType=\"append\">\n                                    <InputGroupText>BCH</InputGroupText>\n                                </InputGroupAddon>\n                            </InputGroup>\n                        </Col></Row>\n                        <Row><Col>\n                            <InputGroup>\n                                <Input type=\"number\" name=\"BCHUSDamount\" id=\"BCHUSDamount\" bsSize=\"lg\" value={this.state.bchusd} disabled />\n                                <InputGroupAddon addonType=\"append\">\n                                    <InputGroupText>estimated USD value</InputGroupText>\n                                </InputGroupAddon>\n                            </InputGroup>\n                        </Col></Row>\n                </FormGroup>\n\n\n                <ArrowDown size=\"18\" color={'black'} />\n\n                <FormGroup row className=\"formGroupTo\">\n                    <Row><Col>You will receive:</Col></Row>\n                        <Row><Col>\n                            <InputGroup>\n                            <Input type=\"number\" name=\"SLPamount\" id=\"SLPamount\" onChange={this.handleChange} value={this.state.slp} bsSize=\"lg\" disabled />\n                                <InputGroupAddon addonType=\"append\">\n                                  <InputGroupText>SLP</InputGroupText>\n                                </InputGroupAddon></InputGroup>\n                        </Col></Row>\n                        <Row><Col>\n                            <InputGroup>\n                            <Input type=\"number\" name=\"SLPUSDamount\" id=\"SLPUSDamount\" bsSize=\"lg\" value={this.state.slpusd} disabled />\n                            <InputGroupAddon addonType=\"append\">\n                              <InputGroupText>estimated USD value</InputGroupText>\n                            </InputGroupAddon>\n                            </InputGroup>\n                        </Col></Row>\n                </FormGroup>\n\n                <Button color=\"success\" onClick={this.handleSubmit} className=\"SwapButton\">Start swap</Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                  <ModalHeader toggle={this.toggleModal}>Private key needed for the swap</ModalHeader>\n                  <ModalBody>\n\n                    <Input placeholder=\"Paste your private key string here\" type=\"text\" name=\"PrivateKey\" id=\"PrivateKey\"  onChange={this.handleChangePrivateKey} value={this.state.privateKey} bsSize=\"lg\" />\n                  </ModalBody>\n                  <ModalFooter>\n                    <Button color=\"primary\" onClick={this.handleSubmitPrivateKey}>OK</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.toggleModal}>Cancel</Button>\n                  </ModalFooter>\n                </Modal>\n              </Form>\n              <p>{this.swapStatus}</p>\n              </div>\n      );\n  }\n};\n\n\n\n\nfunction MainSwap() {\n  return (\n        <>\n                <SwapForm/>\n        </>\n  );\n}\n\nexport default MainSwap;\n","/home/user/Documents/BCH/cashswap/src/service/contract.js",[],"/home/user/Documents/BCH/cashswap/src/service/helper.js",[],"/home/user/Documents/BCH/cashswap/src/service/ecdsa.js",[],"/home/user/Documents/BCH/cashswap/src/service/secp256k1.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":8,"nodeType":"56","messageId":"57","endLine":1,"endColumn":12},{"ruleId":"54","severity":1,"message":"58","line":5,"column":21,"nodeType":"56","messageId":"57","endLine":5,"endColumn":27},{"ruleId":"59","severity":1,"message":"60","line":106,"column":108,"nodeType":"61","endLine":106,"endColumn":136},{"ruleId":"54","severity":1,"message":"62","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":25},{"ruleId":"54","severity":1,"message":"63","line":2,"column":10,"nodeType":"56","messageId":"57","endLine":2,"endColumn":19},{"ruleId":"54","severity":1,"message":"64","line":4,"column":10,"nodeType":"56","messageId":"57","endLine":4,"endColumn":15},{"ruleId":"54","severity":1,"message":"65","line":4,"column":34,"nodeType":"56","messageId":"57","endLine":4,"endColumn":39},{"ruleId":"54","severity":1,"message":"66","line":5,"column":10,"nodeType":"56","messageId":"57","endLine":5,"endColumn":18},{"ruleId":"54","severity":1,"message":"67","line":5,"column":20,"nodeType":"56","messageId":"57","endLine":5,"endColumn":34},{"ruleId":"54","severity":1,"message":"68","line":5,"column":36,"nodeType":"56","messageId":"57","endLine":5,"endColumn":48},{"ruleId":"54","severity":1,"message":"69","line":5,"column":50,"nodeType":"56","messageId":"57","endLine":5,"endColumn":62},{"ruleId":"54","severity":1,"message":"70","line":14,"column":10,"nodeType":"56","messageId":"57","endLine":14,"endColumn":29},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Container' is defined but never used.","'Media' is defined but never used.","'Label' is defined but never used.","'Dropdown' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","'PresentResultOfSwap' is defined but never used.","no-global-assign","no-unsafe-negation"]